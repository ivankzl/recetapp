FROM python:3.8.0-alpine as builder

WORKDIR /usr/src/recetapp

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

RUN apk add --no-cache jpeg-dev zlib-dev
RUN apk add --no-cache --virtual .build-deps build-base linux-headers \
    && pip install Pillow

RUN pip install --upgrade pip
RUN pip install flake8
COPY . /usr/src/recetapp/
# RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/recetapp/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.0-alpine

# create directory for the app user
RUN mkdir -p /home/recetapp

# create the app user
RUN addgroup -S recetapp && adduser -S recetapp -G recetapp

# create the appropriate directories
ENV HOME=/home/recetapp
ENV APP_HOME=/home/recetapp/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
COPY mediafiles/. $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
RUN apk add --no-cache jpeg-dev zlib-dev
RUN apk add --no-cache --virtual .build-deps build-base linux-headers \
    && pip install Pillow
COPY --from=builder /usr/src/recetapp/wheels /wheels
COPY --from=builder /usr/src/recetapp/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R recetapp:recetapp $APP_HOME

# change to the app user
USER recetapp

# run entrypoint.prod.sh
ENTRYPOINT ["/home/recetapp/web/entrypoint.prod.sh"]